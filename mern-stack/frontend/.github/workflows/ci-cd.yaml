#CI for Frontend
name: Frontend CI
on:
    push:
        branches:
            - main
jobs:
    # build:
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: Checkout code
    #           uses: actions/checkout@v2

    #         - name: Set up Node.js
    #           uses: actions/setup-node@v2
    #           with:
    #             node-version: '18.9.1'

    #         - name: Install dependencies
    #           run: npm install
 
    #         # - name: Run tests
    #         #   run: npm test

    #         - name: Build project
    #           run: npm run build

    # code_quality:
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: Checkout code
    #           uses: actions/checkout@v2

    #         - name: Set up Node.js
    #           uses: actions/setup-node@v2
    #           with:
    #             node-version: '18.9.1'

    #         - name: Install dependencies
    #           run: npm install

            # - name: Run ESLint
            #   run: npm run lint

            # - name: Run Prettier
            #   run: npm run format-check    
    docker: 
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Install Docker
              uses: docker/setup-buildx-action@v1
            
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ secrets.AWS_REGION }}
            
            - name: Login to AWS ECR
              uses: aws-actions/amazon-ecr-login@v1

            - name: Docker push
              uses: docker/build-push-action@v2
              with:  
                context: .
                file: Dockerfile
                push: true
                tags: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${{ github.run_id }}
                region: ${{ secrets.AWS_REGION }}
    update_k8s:
      runs-on: ubuntu-latest
      needs: docker
      steps:
        - name: Clone Kubernetes manifests repo
          run: |
            git clone https://${{ secrets.TOKEN }}@github.com/YOUR_ORG/${{ secrets.MANIFEST_REPO }}.git
            sed -i 's#\(image: .*:\).*#\1${{ github.run_id }}#' frontend/deployment.yml

            git config --global user.email "${{ secrets.USER_EMAIL }}"
            git config --global user.name "${{ secrets.USER_NAME }}"
            git add frontend/deployment.yml
            git diff --cached --quiet || git commit -m "Update image tag to ${{ github.run_id }}"
            git push origin main
